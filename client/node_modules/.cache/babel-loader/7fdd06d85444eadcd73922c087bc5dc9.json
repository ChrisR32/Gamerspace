{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/gamerspace/Gamerspace/client/src/Pages/Auth/Register.js\";\nimport React, { useState } from 'react';\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport AuthContext from \"../../Contexts/AuthContext\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TitleImg from \"../../Images/register3.png\";\nimport \"./Auth.css\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Register() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(null);\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    setEmailError(null);\n    setPasswordError(null);\n    let errors = 0;\n\n    if (!validator.isEmail(email)) {\n      setEmailError(\"Email must be in correct format\");\n      errors++;\n    }\n\n    if (password !== passwordConfirmation) {\n      setPasswordError(\"Passwords don't match.\");\n      errors++;\n    }\n\n    if (errors) return;\n    const data = {\n      name,\n      email,\n      password\n    };\n\n    try {\n      await axios.post(\"/api/auth/register\", data);\n    } catch (e) {\n      const message = e.response.data.message;\n\n      if (message === \"email_exists\") {\n        setEmailError(\"User with this email already exists\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TitleImg,\n    className: \"title-logo\",\n    alt: \"Gamerspace Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Name\",\n    autoFocus: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email Address\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    error: !!emailError,\n    helperText: emailError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    error: !!passwordError,\n    helperText: passwordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password Confirmation\",\n    type: \"password\",\n    value: passwordConfirmation,\n    onChange: e => setPasswordConfirmation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Sign In\"))));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/gamerspace/Gamerspace/client/src/Pages/Auth/Register.js"],"names":["React","useState","validator","axios","AuthContext","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","TitleImg","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Register","classes","name","setName","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","passwordConfirmation","setPasswordConfirmation","handleOnSubmit","event","preventDefault","errors","isEmail","data","post","e","message","response","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport validator from \"validator\";\nimport axios from \"axios\";\nimport AuthContext from \"../../Contexts/AuthContext\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TitleImg from \"../../Images/register3.png\";\nimport \"./Auth.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n    const classes = useStyles();\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [emailError, setEmailError] = useState(null);\n    const [password, setPassword] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(null);\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n    const handleOnSubmit = async event => {\n        event.preventDefault();\n        setEmailError(null);\n        setPasswordError(null);\n        let errors = 0;\n\n        if (!validator.isEmail(email))\n        {\n            setEmailError(\"Email must be in correct format\");\n            errors++;\n        }\n\n        if (password !== passwordConfirmation) {\n            setPasswordError(\"Passwords don't match.\");\n            errors++;\n        }\n\n        if (errors) return;\n\n        const data = {\n            name,\n            email,\n            password\n        };\n\n        try {\n            await axios.post(\"/api/auth/register\", data);\n        } catch (e) {\n            const message = e.response.data.message;\n            if (message === \"email_exists\") {\n                setEmailError(\"User with this email already exists\");\n            }\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                <img src={TitleImg} className=\"title-logo\" alt=\"Gamerspace Logo\"/>\n                </Typography>\n                <form className={classes.form} onSubmit={handleOnSubmit}>\n                    <TextField\n                        required\n                        fullWidth\n                        label=\"Name\"\n                        autoFocus\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                    <TextField\n                        required\n                        fullWidth\n                        label=\"Email Address\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        error={!!emailError}\n                        helperText={emailError}\n                    />\n                    <TextField\n                        required\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        error={!!passwordError}\n                        helperText={passwordError}\n                    />\n                    <TextField\n                        required\n                        fullWidth\n                        label=\"Password Confirmation\"\n                        type=\"password\"\n                        value={passwordConfirmation}\n                        onChange={e => setPasswordConfirmation(e.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}